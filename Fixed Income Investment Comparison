import matplotlib.pyplot as plt
import numpy as np

# historical annual interest rates for Federal Series I-bonds
# compounds every 6 months, new interest rate is used every 6 months
historical_r = [10.64, 10.54, 10.54, 10.64, 10.85, 10.64, 10.23, 9.19, 9.19,
 8.78, 8.26, 8.26, 8.16, 8.16, 8.36, 8.16, 8.57, 8.57, 8.47, 8.36, 7.12, 7.84,
  7.22, 7.43, 7.33, 7.12, 7.12, 7.12, 7.12, 7.12, 7.12, 7.33, 7.22, 7.12, 7.12,
  7.22, 7.22, 7.12, 7.12, 7.22, 7.43, 7.64, 7.64, 7.33, 7.12, 7.12, 7.12, 7.12]

# converted the historical_r values to monthly interest rates
monthly_r = [historical_r[i]/(12*100) for i in range(len(historical_r))]

# models interest growth of an I-bonds investment
def Ibonds(Principle):
    balance = [Principle]
    interest = [0]
    compound_time = 6
    for i in range(len(historical_r)):
        for j in range(1, 7):
            if j % 6 != 0:
                balance.append(balance[-1])
                interest.append(round(balance[-1] * monthly_r[i], 2))
            else:
                new_balance = (balance[-1] + 6*interest[-1]) * (1 + monthly_r[i])
                balance.append(round(new_balance,2))
                interest.append(round(new_balance - balance[-1],2))
    return balance

# models interest growth of an I-bonds investment assuming a constant annual interest rate
def Ibonds_avg(Principle, annual_r, months):
    effective_r = annual_r/(12*100)
    balance = [Principle]
    interest = [0]
    for i in range(0, months + 1):
        if i == 0:
            continue
        else:
            if i % 6 != 0:
                balance.append(balance[i-1])
                interest.append(round(balance[i-1] * effective_r,2))
            else:
                new_balance = (balance[i-1] + sum(interest[i-6:i]))* (1 + effective_r)
                interest.append(round(new_balance - balance[i-1],2))
                balance.append(round(new_balance,2))
    return balance

# models interest growth of High Yield Savings Account
def HYSA(Principle, annual_r, months):
    balance = [Principle]
    interest = [0]
    for i in range(0, months + 1):
        if i == 0:
            continue
        else:
            new_balance = balance[i-1]*(1+(annual_r/(12*100)))**i
            balance.append(round(new_balance,2))
            interest.append(round(balance[i] - balance[i-1],2))
    return balance


time = len(historical_r)*6
hist_avg = np.average(historical_r)
t = Ibonds(1e4)
u = HYSA(1e4, 0.5, time)
w = Ibonds_avg(1e4, hist_avg, time)

x = range(time+1)

plt.figure(1)
plt.plot(x, t, label = 'Series I Bonds - Monthly')
plt.plot(x, u, label = 'Marcus by Goldman Sachs HYSA')
plt.plot(x, w, label = 'Series I Bonds - Average')
plt.legend(loc = "lower right")
plt.xlabel('Months')
plt.ylabel('Balance ($)')
plt.xlim(0, time+1)
plt.ylim(0, 4.5e4)
plt.show()
